status = error
dest = err
name = OrangeHrmTestConfig
 
 
property.filename = target/logs/OrangeHrmTest.log
 
 
filter.threshold.type = ThresholdFilter
filter.threshold.level = debug
 
# Console appender settings
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d [%p] %C{1.}:%L [%t] %m%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = error
 
 
 # Rolling file appender settings
appender.RollingFile.type = RollingFile
appender.RollingFile.name = RollingFileAppender
appender.RollingFile.fileName = logs/OrangeHrmTest.log
appender.RollingFile.filePattern = logs/OrangeHrmTest-%d{yyyy-MM-dd-HH-mm-ss}-%i.log.gz
appender.RollingFile.layout.type = PatternLayout
appender.RollingFile.layout.pattern = %d [%p] %C{1.}:%L [%t] %m%n
appender.RollingFile.policies.type = Policies
appender.RollingFile.policies.size.type = SizeBasedTriggeringPolicy
appender.RollingFile.policies.size.size = 10MB
appender.RollingFile.strategy.type = DefaultRolloverStrategy
appender.RollingFile.strategy.max = 10
 
 
#appender.rolling.type = RollingFile
#appender.rolling.name = RollingFile
#appender.rolling.fileName = ${filename}
#appender.rolling.filePattern = target/logs/OrangeHrmTestOld-%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
#appender.rolling.layout.type = PatternLayout
#appender.rolling.layout.pattern = %d [%p] %C{1.}:%L [%t] %m%n
#appender.rolling.policies.type = Policies
#appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
#appender.rolling.policies.time.interval = 2
#appender.rolling.policies.time.modulate = true
#appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
#appender.rolling.policies.size.size=10MB
#appender.rolling.strategy.type = DefaultRolloverStrategy
#appender.rolling.strategy.max = 5
 
#logger.rolling = debug, RollingFile
#logger.rolling.name = com.example.my.app
#logger.rolling.additivity = false
 
rootLogger = info, STDOUT , RollingFileAppender
 
# or using a grouping element:
# rootLogger.level = info
# rootLogger.appenderRef.stdout.ref = STDOUT

#ALL	All levels including custom levels.
#DEBUG	Designates fine-grained informational events that are most useful to debug an application.
#INFO	Designates informational messages that highlight the progress of the application at coarse-grained level.
#WARN	Designates potentially harmful situations.
#ERROR	Designates error events that might still allow the application to continue running.
#FATAL	Designates very severe error events that will presumably lead the application to abort.
#OFF	The highest possible rank and is intended to turn off logging.
#TRACE	Designates finer-grained informational events than the DEBUG.

